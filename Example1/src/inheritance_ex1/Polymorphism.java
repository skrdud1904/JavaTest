package inheritance_ex1;

public class Polymorphism {
	/*
	 * 다형성
	 * (다형성은 Hash맵, Linked Hash맵)
	 * 
	 * 하나가 여러가지 형태를 가질수 있는 능력
	 * 
	 * * 이렇게 외우시면 됩니다.
	 * 조상 타입 참조 변수로 자손 타입 객체(인스턴스로 호출)로 다루는 것.
	 * (ex. Tv a = new SmartTv();)
	 * 
	 * 기존의 객체를 선언할 경우는 참조변수의 타입을 일치 시켜 주어야 했다.
	 * Tv t = new Tv();
	 * SmartTv s = new SmartTv();
	 * 
	 * 그러나 부모를 상속받는 자식 클래스를
	 * 조상타입 참조 변수로 자손 타입의 객체 선언이 불일치하더라도 이것이 가능하다.
	 * Tv t1= new SmartTv();
	 * Tv t2 = new lgTv();
	 * 
	 * Tv t = new SmartTv(); 부모에서 자식객체를 선언하는 것은 괜찮으나
	 * SmartTv s = new Tv(); 이렇게 역순은 안됨
	 * 
	 * 
	 * 	참조변수 타입은 인스턴스 타입과 반드시 일치해야합니까?
	 * 	일치하는 것이 일반적이나 다형성의 경우 일치 하지 않는다.
	 * 
	 * 	참조 변수가 조상타입 일때 와 자손 타입일때의 차이?
	 * 	참조 변수로 사용할때 사용할 수 있는 멤버의 갯수가 달라집니다.
	 * 
	 * Tv만 상속받는 얘들 여러개를 사용할 수 있게 된다.
	 * 
	 * 
	 */

}
